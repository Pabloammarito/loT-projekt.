from uthingsboard.client import TBDeviceMqttClient
from time import sleep, ticks_ms, ticks_diff
from machine import reset, UART
import gc
import secrets
from gps_simple import GPS_SIMPLE


gps_port = 2
gps_speed = 9600
uart = UART(gps_port, gps_speed)
gps = GPS_SIMPLE(uart)


client = TBDeviceMqttClient(secrets.SERVER_IP_ADDRESS, access_token=secrets.ACCESS_TOKEN)
client.connect()
print("Connected to ThingsBoard")


STILLNESS_TIME = 3 * 60 * 1000  
MOVEMENT_THRESHOLD = 0.0001   


last_position = None
last_movement_time = ticks_ms()
stillness_flag = False

def get_lat_lon():
    """Hent latitude og longitude fra GPS-modulet."""
    if gps.receive_nmea_data():
        if gps.get_latitude() != -999.0 and gps.get_longitude() != -999.0 and gps.get_validity() == "A":
            return gps.get_latitude(), gps.get_longitude()
    return None

while True:
    try:
        print(f"Free memory: {gc.mem_free()}")
        if gc.mem_free() < 2000:
            print("Garbage collected!")
            gc.collect()

        current_time = ticks_ms()
        current_position = get_lat_lon()

        if current_position:
            print(f"Current position: {current_position}")

            
            if last_position:
                lat_diff = abs(current_position[0] - last_position[0])
                lon_diff = abs(current_position[1] - last_position[1])
                moving = lat_diff > MOVEMENT_THRESHOLD or lon_diff > MOVEMENT_THRESHOLD
            else:
                moving = True  

            if moving:
                last_movement_time = current_time
                if stillness_flag:
                    
                   
                    telemetry = {'latitude': current_position[0], 'longitude': current_position[1]}
                    client.send_telemetry(telemetry)
                    print("Bevægelse registeret, telemetry sendt:", telemetry)
                    stillness_flag = False
                   
            else:
                if ticks_diff(current_time, last_movement_time) > STILLNESS_TIME:
                    stillness_flag = True
                    print("Cyklen har stået stille i mere end 3 minutter.")

            last_position = current_position

        sleep(5)  

    except KeyboardInterrupt:
        print("Disconnected!")
        client.disconnect()
        reset()
